openapi: 3.0.0
info:
  title: ITGlue API
  version: 1.0.0
  description: 'Generated from https://github.com/jmaddington/ITG-Glue-OpenAPI


    This document strives to accurately represent IT Glue''s API in the OpenAPI 3.0
    format, but is best effort only. This is NOT

    an official IT Glue or Kaseya document.


    Find official documentation at https://api.itglue.com/developer/

    Details of pagination at https://help.itglue.kaseya.com/help/Content/1-admin/it-glue-api/pagination-in-the-it-glue-api.html

    Details of sorts and filters at https://help.itglue.kaseya.com/help/Content/1-admin/it-glue-api/sorting-and-filtering-in-the-it-glue-api.html


    **Authentication/Request Headers**

    All API requests require the following headers:

    - `x-api-key: {{api-token}}`

    - `Content-Type: application/vnd.api+json`


    Note: If the request does not have a payload, the `Content-Type` header is not
    required.'
servers:
- url: https://api.itglue.com
  description: Default API server
- url: https://api.eu.itglue.com
  description: EU data center
- url: https://api.au.itglue.com
  description: Australia data center
paths:
  /configuration_interfaces:
    post:
      summary: ''
      description: Creates a new configuration interface under the configuration specified
        in the ID parameter.         Returns the created object if successful. Use
        the nested relationships route to add multiple         configuration interfaces
        to a configuration in bulk.
      parameters:
      - name: configuration_id
        in: query
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid configuration ID in your account.'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:configuration_interfaces.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][configuration_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][ip_address]
        in: query
        description: IP4 and IP6 are supportedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][mac_address]
        in: query
        description: Must be a valid MAC addressValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][primary]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates a list of configuration interfaces, also known as bulk
        updating. Bulk updates using a nested         relationships route are not
        supported. Returns 422 Bad Request error if trying to update         an externally
        synced, primary IP address.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cconfiguration_interfacesâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80\
          ¦}Validations:Must be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:configuration_interfaces.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][configuration_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][ip_address]
        in: query
        description: IP4 and IP6 are supportedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][mac_address]
        in: query
        description: Must be a valid MAC addressValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][primary]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[_][attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[ip_address]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /configuration_interfaces/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing configuration interface.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: configuration_id
        in: query
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid configuration ID in your account.'
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates the details of an existing configuration interface. Returns
        422 Bad Request error         if trying to update an externally synced, primary
        IP address.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: configuration_id
        in: query
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid configuration ID in your account.'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:configuration_interfaces.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][configuration_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][ip_address]
        in: query
        description: IP4 and IP6 are supportedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][mac_address]
        in: query
        description: Must be a valid MAC addressValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][primary]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /configuration_statuses:
    get:
      summary: ''
      description: 'Returns a list of the configuration statuses in your account.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[name]
        in: query
        description: exact match onlyValidations:Must be a String
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a new configuration status in your account. Returns the
        created object if successful.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:configuration_statuses.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /configuration_statuses/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing configuration status.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates a configuration status in your account. Returns 422 Bad
        Request error if trying to update an externally synced record.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:configuration_statuses.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /configuration_types:
    get:
      summary: ''
      description: 'Returns a list of configuration types in your account.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[name]
        in: query
        description: exact match onlyValidations:Must be a String
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a new configuration type in your account. Returns the created
        object if successful.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:configuration_types.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '415':
          description: Unsupported Media Type
        '422':
          description: Bad Request
      security:
      - apiKeyAuth: []
  /configuration_types/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing configuration type.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates a configuration type in your account. Returns 422 Bad Request
        error if trying to update an externally synced record.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:configuration_types.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
  /configurations:
    get:
      summary: ''
      description: 'Returns a list of configurations for all organizations or for
        a specified organization.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[status]
        in: query
        description: Filter results by status
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: organization_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[configuration_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[configuration_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[contact_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[serial_number]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[mac_address]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[asset_tag]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      - name: filter[rmm_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for rmm_integration_type'
        required: false
        schema:
          type: string
      - name: filter[rmm_integration_type]
        in: query
        description: Validations:Must be one of:addigy,aem,atera,auvik,managed-workplace,continuum,jamf-pro,kaseya-vsa,automate,log-me-in,msp-rmm,meraki,msp-n-central,ninja-rmm,panorama9,pulseway-rmm,syncro,watchman-monitoring,office365,vsa-x.
        required: false
        schema:
          type: string
      - name: filter[archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      - name: include
        in: query
        description: 'Validations:Must be one of:adapters_resources,configuration_interfaces,rmm_records,passwords,attachments,tickets,dnet_fa_remote_assets,user_resource_accesses,group_resource_accesses.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a configuration under the organization specified in the
        ID parameter. Returns the created object         if successful. Use the nested
        relationships route to add multiple configurations to an organization in bulk.
      parameters:
      - name: organization_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:configurations.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][configuration_type_id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][configuration_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][location_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][contact_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][manufacturer_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][model_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][operating_system_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][operating_system_notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][hostname]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][primary_ip]
        in: query
        description: IP4 and IP6 are supportedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][mac_address]
        in: query
        description: 17 Character limitValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][default_gateway]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][serial_number]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][asset_tag]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][position]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][installed_by]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][purchased_by]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][purchased_at]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][warranty_expires_at]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][mitp_device_expiration_date]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][mitp_end_of_life_date]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][installed_at]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[relationships]
        in: query
        description: Not permitted in PUT/PATCH, optional in POSTValidations:Must
          be a Hash
        required: false
        schema:
          type: object
      - name: data[relationships][configuration_interfaces]
        in: query
        description: Validations:Must be a Hash
        required: false
        schema:
          type: object
      - name: data[relationships][configuration_interfaces][data]
        in: query
        description: Can contain multiple InterfacesValidations:Must be an Array of
          nested elements
        required: false
        schema:
          type: string
      - name: data[relationships][configuration_interfaces][data][_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cconfiguration_interfacesâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D.â\x80\
          ¦}Validations:Must be a Hash"
        required: false
        schema:
          type: object
      - name: data[relationships][configuration_interfaces][data][_][type]
        in: query
        description: Validations:Must be one of:configuration_interfaces.
        required: true
        schema:
          type: string
      - name: data[relationships][configuration_interfaces][data][_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: false
        schema:
          type: object
      - name: data[relationships][configuration_interfaces][data][_][attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[relationships][configuration_interfaces][data][_][attributes][ip_address]
        in: query
        description: IP4 and IP6 are supportedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[relationships][configuration_interfaces][data][_][attributes][mac_address]
        in: query
        description: Must be a valid MAC addressValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[relationships][configuration_interfaces][data][_][attributes][primary]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[relationships][configuration_interfaces][data][_][attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: 'Updates a list of items, also known as bulk updating. Bulk updates
        using a nested relationships route are not supported.         Returns 422
        Unprocessable Entity error if any relationships are present in the request.         Returns
        422 Unprocessable Entity error if trying to update an externally synced record
        on         attributes other than: archived, asset_tag, notes, purchased_at,
        restricted, serial_number, warranty_expires_at, mitp_device_expiration_date,
        mitp_end_of_life_date'
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cconfigurationsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:configurations.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][configuration_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][configuration_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][location_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][contact_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][manufacturer_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][model_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][operating_system_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][operating_system_notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][hostname]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][primary_ip]
        in: query
        description: IP4 and IP6 are supportedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][mac_address]
        in: query
        description: 17 Character limitValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][default_gateway]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][serial_number]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][asset_tag]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][position]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][installed_by]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][purchased_by]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][purchased_at]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][warranty_expires_at]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][mitp_device_expiration_date]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][mitp_end_of_life_date]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][installed_at]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[_][attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[configuration_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[configuration_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[contact_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[serial_number]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[mac_address]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[asset_tag]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      - name: filter[rmm_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for rmm_integration_type'
        required: false
        schema:
          type: string
      - name: filter[rmm_integration_type]
        in: query
        description: Validations:Must be one of:addigy,aem,atera,auvik,managed-workplace,continuum,jamf-pro,kaseya-vsa,automate,log-me-in,msp-rmm,meraki,msp-n-central,ninja-rmm,panorama9,pulseway-rmm,syncro,watchman-monitoring,office365,vsa-x.
        required: false
        schema:
          type: string
      - name: filter[archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Deletes one or more specified configurations. Returns the deleted
        configurations and a 200 status code if successful.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Cannot be used in combination with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cconfigurationsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:configurations.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[configuration_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[configuration_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[contact_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[serial_number]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[mac_address]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[asset_tag]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      - name: filter[rmm_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for rmm_integration_type'
        required: false
        schema:
          type: string
      - name: filter[rmm_integration_type]
        in: query
        description: Validations:Must be one of:addigy,aem,atera,auvik,managed-workplace,continuum,jamf-pro,kaseya-vsa,automate,log-me-in,msp-rmm,meraki,msp-n-central,ninja-rmm,panorama9,pulseway-rmm,syncro,watchman-monitoring,office365,vsa-x.
        required: false
        schema:
          type: string
      - name: filter[archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /configurations/{configuration_id}/relationships/configuration_interfaces:
    get:
      summary: ''
      description: 'Returns the configuration interfaces for a specified configuration.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: configuration_id
        in: path
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid configuration ID in your account.'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[ip_address]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a new configuration interface under the configuration specified
        in the ID parameter.         Returns the created object if successful. Use
        the nested relationships route to add multiple         configuration interfaces
        to a configuration in bulk.
      parameters:
      - name: configuration_id
        in: path
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid configuration ID in your account.'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:configuration_interfaces.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][configuration_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][ip_address]
        in: query
        description: IP4 and IP6 are supportedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][mac_address]
        in: query
        description: Must be a valid MAC addressValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][primary]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /configurations/{configuration_id}/relationships/configuration_interfaces/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing configuration interface.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: configuration_id
        in: path
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid configuration ID in your account.'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates the details of an existing configuration interface. Returns
        422 Bad Request error         if trying to update an externally synced, primary
        IP address.
      parameters:
      - name: configuration_id
        in: path
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid configuration ID in your account.'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:configuration_interfaces.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][configuration_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][ip_address]
        in: query
        description: IP4 and IP6 are supportedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][mac_address]
        in: query
        description: Must be a valid MAC addressValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][primary]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /configurations/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing configuration.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: organization_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: include
        in: query
        description: 'Validations:Must be one of:adapters_resources,configuration_interfaces,rmm_records,rmm_adapters_resources,passwords,attachments,tickets,adapters_resources_errors,rmm_adapters_resources_errors,active_network_glue_network_devices,to_configuration_connections,from_configuration_connections,dnet_fa_remote_assets,user_resource_accesses,group_resource_accesses,recent_versions,related_items,authorized_users.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: 'Updates the details of an existing configuration.         Returns
        422 Unprocessable Entity error if any relationships are present in the request.         Returns
        422 Unprocessable Entity error if trying to update an externally synced record
        on         attributes other than: archived, asset_tag, notes, purchased_at,
        restricted, serial_number, warranty_expires_at, mitp_device_expiration_date,
        mitp_end_of_life_date'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: organization_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:configurations.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][configuration_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][configuration_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][location_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][contact_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][manufacturer_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][model_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][operating_system_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][operating_system_notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][hostname]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][primary_ip]
        in: query
        description: IP4 and IP6 are supportedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][mac_address]
        in: query
        description: 17 Character limitValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][default_gateway]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][serial_number]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][asset_tag]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][position]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][installed_by]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][purchased_by]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][purchased_at]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][warranty_expires_at]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][mitp_device_expiration_date]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][mitp_end_of_life_date]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][installed_at]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /contact_types:
    get:
      summary: ''
      description: 'Returns a list of contact types in your account.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[name]
        in: query
        description: exact match onlyValidations:Must be a String
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a new contact type in your account. Returns the created
        object if successful.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:contact_types.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /contact_types/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing contact type.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates a contact type in your account. Returns 422 Bad Request
        error if trying to update         an externally synced record.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:contact_types.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /contacts:
    get:
      summary: ''
      description: 'Returns a list of contacts for all organizations or for a specified
        organization.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:first_name,last_name,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: organization_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[first_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[last_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[title]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[contact_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[important]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: filter[primary_email]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      - name: include
        in: query
        description: 'Validations:Must be one of:adapters_resources,location,passwords,attachments,tickets,distinct_remote_contacts,resource_fields,user_resource_accesses,group_resource_accesses.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a contact under the organization specified in the organization_id
        parameter.        Returns the created object if successful. Use the nested
        relationships route to add         multiple contacts to an organization in
        bulk.
      parameters:
      - name: organization_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:contacts.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][contact_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][location_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][first_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][last_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][title]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][important]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[contact_emails]
        in: query
        description: Can contain multiple emailsValidations:Must be an Array of nested
          elements
        required: false
        schema:
          type: string
      - name: data[contact_emails][_]
        in: query
        description: "Nameless hash, should look like: {â\x80\x9Cvalueâ\x80\x9D: â\x80\
          \x9Cemail@company.comâ\x80\x9D, â\x80\x9Cprimaryâ\x80\x9D: true, â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[contact_emails][_][value]
        in: query
        description: Must be a valid email address formatValidations:Must be a String
        required: true
        schema:
          type: string
      - name: data[contact_emails][_][label_name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[contact_emails][_][primary]
        in: query
        description: Defaults to false if not provided.Validations:Must be one of:true,false.
        required: false
        schema:
          type: string
      - name: data[contact_phones]
        in: query
        description: Can contain multiple phonesValidations:Must be an Array of nested
          elements
        required: false
        schema:
          type: string
      - name: data[contact_phones][_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Cvalueâ\x80\x9D: â\x80\
          \x9C2341112233â\x80\x9D, â\x80\x9Cprimaryâ\x80\x9D: true, â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[contact_phones][_][value]
        in: query
        description: Phone numbers are stripped of all separators.Validations:Must
          be a String
        required: true
        schema:
          type: string
      - name: data[contact_phones][_][label_name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[contact_phones][_][extension]
        in: query
        description: Phone extensions are stripped of all separators.Validations:Must
          be a String
        required: false
        schema:
          type: string
      - name: data[contact_phones][_][primary]
        in: query
        description: Defaults to false if not provided.Validations:Must be one of:true,false.
        required: false
        schema:
          type: string
      - name: data[contact_phones][_][label_type]
        in: query
        description: Defaults to phone if not provided.Validations:Must be one of:phone,fax.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates a list of contacts, also known as bulk updating. Bulk updates
        using a nested relationships         route are not supported. Returns 422
        Bad Request error if trying to update an externally synced record.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Ccontactsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:contacts.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][contact_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][location_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][first_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][last_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][title]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][important]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[_][attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[first_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[last_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[title]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[contact_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[important]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: filter[primary_email]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Deletes one or more specified contacts. Returns the deleted contacts
        and a 200 status code if successful.
      parameters:
      - name: organization_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Cannot be used in combination with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Ccontactsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:contacts.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[first_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[last_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[title]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[contact_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[important]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: filter[primary_email]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /contacts/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing contact.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: organization_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: include
        in: query
        description: 'Validations:Must be one of:adapters_resources,location,passwords,attachments,tickets,distinct_remote_contacts,resource_fields,user_resource_accesses,group_resource_accesses,recent_versions,related_items,authorized_users.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates the details of an existing contact. Returns 422 Bad Request
        error if trying to update an         externally synced record.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: organization_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:contacts.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][contact_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][location_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][first_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][last_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][title]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][important]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[contact_emails]
        in: query
        description: Can contain multiple emailsValidations:Must be an Array of nested
          elements
        required: false
        schema:
          type: string
      - name: data[contact_emails][_]
        in: query
        description: "Nameless hash, should look like: {â\x80\x9Cvalueâ\x80\x9D: â\x80\
          \x9Cemail@company.comâ\x80\x9D, â\x80\x9Cprimaryâ\x80\x9D: true, â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[contact_emails][_][value]
        in: query
        description: Must be a valid email address formatValidations:Must be a String
        required: true
        schema:
          type: string
      - name: data[contact_emails][_][label_name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[contact_emails][_][primary]
        in: query
        description: Defaults to false if not provided.Validations:Must be one of:true,false.
        required: false
        schema:
          type: string
      - name: data[contact_phones]
        in: query
        description: Can contain multiple phonesValidations:Must be an Array of nested
          elements
        required: false
        schema:
          type: string
      - name: data[contact_phones][_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Cvalueâ\x80\x9D: â\x80\
          \x9C2341112233â\x80\x9D, â\x80\x9Cprimaryâ\x80\x9D: true, â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[contact_phones][_][value]
        in: query
        description: Phone numbers are stripped of all separators.Validations:Must
          be a String
        required: true
        schema:
          type: string
      - name: data[contact_phones][_][label_name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[contact_phones][_][extension]
        in: query
        description: Phone extensions are stripped of all separators.Validations:Must
          be a String
        required: false
        schema:
          type: string
      - name: data[contact_phones][_][primary]
        in: query
        description: Defaults to false if not provided.Validations:Must be one of:true,false.
        required: false
        schema:
          type: string
      - name: data[contact_phones][_][label_type]
        in: query
        description: Defaults to phone if not provided.Validations:Must be one of:phone,fax.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /copilot_smart_assist/documents:
    get:
      summary: ''
      description: "Offer analytics on documentation usage, such as â\x80\x98Documents\
        \ not viewed in X amount of timeâ\x80\x99, â\x80\x98Documents that were never\
        \ viewedâ\x80\x99, â\x80\x98Documents that are expiredâ\x80\x99, and â\x80\
        \x98Duplicate documentsâ\x80\x99.\n\nNote: The maximum number of results that\
        \ can be requested is 1000. If your requests are timing out, try lowering\
        \ the page size."
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[type]
        in: query
        description: Validations:Must be one of:stale,not_viewed,expired.
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates a list of items, also known as bulk updating. The bulk
        update PATCH format is one that is similar to the response returned from a
        GET on a list resource. It will accept a partial representation of objects,
        as long as the required parameters are present.
      parameters:
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[type]
        in: query
        description: Validations:Must be one of:stale,not_viewed,expired.
        required: false
        schema:
          type: string
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Cannot be used in combination with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cdocumentsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:documents.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][archived]
        in: query
        description: Validations:Must be one of:true,false.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Deletes one or more specified documents. Returns the deleted documents
        and a 200 status code if successful.
      parameters:
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[type]
        in: query
        description: Validations:Must be one of:stale,not_viewed,expired.
        required: false
        schema:
          type: string
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Cannot be used in combination with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cdocumentsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:documents.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][archived]
        in: query
        description: Validations:Must be one of:true,false.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      security:
      - apiKeyAuth: []
  /countries:
    get:
      summary: ''
      description: 'Returns a list of supported countries.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[name]
        in: query
        description: exact match onlyValidations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[iso]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
  /countries/{country_id}/relationships/regions:
    get:
      summary: ''
      description: 'Returns a list of supported regions.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: country_id
        in: path
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid country ID.'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[name]
        in: query
        description: exact match onlyValidations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[iso]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[country_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
  /countries/{country_id}/relationships/regions/{id}:
    get:
      summary: ''
      description: 'Returns the details of one of the supported regions.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: country_id
        in: path
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid country ID.'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
  /countries/{id}:
    get:
      summary: ''
      description: 'Returns the details of one of the supported countries.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
  /documents:
    patch:
      summary: ''
      description: Updates a list of items, also known as bulk updating.
      parameters:
      - name: organization_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata::Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata::Param
          Type: JSON Body Param'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cdocumentsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:documents.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[_][attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[_][attributes][public]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[_][attributes][is_uploaded]
        in: query
        description: Not permitted in PUT/PATCH, optional in POSTValidations:Must
          be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[_][attributes][document_folder_id]
        in: query
        description: Not permitted in PUT/PATCH, optional in POSTValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][sop_generator]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /documents/{id}:
    patch:
      summary: ''
      description: Updates an existing document. Returns the updated object if successful.
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: organization_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata::Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:documents.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][public]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][is_uploaded]
        in: query
        description: Not permitted in PUT/PATCH, optional in POSTValidations:Must
          be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][document_folder_id]
        in: query
        description: Not permitted in PUT/PATCH, optional in POSTValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][sop_generator]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
      security:
      - apiKeyAuth: []
  /domains:
    get:
      summary: ''
      description: 'Returns a list of domains for all organizations or for a specified
        organization.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: organization_id
        in: query
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid organization ID in your account.'
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      - name: include
        in: query
        description: 'Validations:Must be one of:passwords,attachments,user_resource_accesses,group_resource_accesses.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
  /expirations:
    get:
      summary: ''
      description: 'Returns a list of expirations for all organizations or for a specified
        organization.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:id,organization_id,expiration_date,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: organization_id
        in: query
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid organization ID in your account.'
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[resource_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[resource_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[resource_type_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[description]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[expiration_date]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[range]
        in: query
        description: "To filter on a specific range, supply two comma-separated values\
          \ (e.g. â\x80\x9C2, 10â\x80\x9D is filtering for all that are greater than\
          \ or equal to 2 and less than or equal to 10). Or, an asterisk ( * ) can\
          \ filter on values either greater than or equal to (e.g. â\x80\x9C2, *â\x80\
          \x9D), or less than or equal to (â\x80\x9C*, 10â\x80\x9D)Validations:Must\
          \ be a HashMetadata:Param Type: CGI"
        required: false
        schema:
          type: object
      - name: filter[range][expiration_date]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
  /expirations/{id}:
    get:
      summary: ''
      description: 'Returns a single expiration with the given ID or a single expiration
        for a specified organization.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: organization_id
        in: query
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid organization ID in your account.'
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
  /exports:
    get:
      summary: ''
      description: 'Returns a list of exports in your account.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a new export under the current account. The new export
        will be for a single organization if organization_id is specified; otherwise
        The new export will be for all organizations of the current account. Returns
        the created export record if successful.
      parameters:
      - name: type
        in: query
        description: Validations:Must be one of:exports.
        required: true
        schema:
          type: string
      - name: attributes
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: attributes[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: attributes[include_logs]
        in: query
        description: Defaults to false if not providedValidations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: attributes[zip_password]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /exports/{id}:
    get:
      summary: ''
      description: "â\x80\x98Retrieve a particular export for current account.â\x80\
        \x99\n\nNote: The maximum number of results that can be requested is 1000.\
        \ If your requests are timing out, try lowering the page size."
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: include
        in: query
        description: 'Validations:Must be one of: .Metadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Delete an export. Returns a 204 status code if successful.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
  /flexible_asset_types:
    get:
      summary: ''
      description: 'Returns a list of flexible asset types in your account.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:id,name,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[icon]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[enabled]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      - name: include
        in: query
        description: 'Validations:Must be one of:flexible_asset_fields.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a new flexible asset type in your account. Returns the
        created object if successful. Use the nested relationships route to add multiple
        flexible asset fields to a flexible asset type in bulk.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:flexible_asset_types.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[attributes][description]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][icon]
        in: query
        description: icon image nameValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][enabled]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][fields]
        in: query
        description: List of fields for this flexible asset type; each flexible asset
          type must have at least one field and at least one field with show_in_list
          set to trueValidations:Must be an Array of nested elements
        required: true
        schema:
          type: string
      - name: data[attributes][fields][id]
        in: query
        description: Required identifier for updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][fields][flexible_asset_type_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][fields][order]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][fields][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[attributes][fields][kind]
        in: query
        description: Kind cannot be changed once there are traits created for the
          fieldValidations:Must be one of:Checkbox,Date,Header,Number,Select,Text,Textbox,Upload,Tag,Percent,Password.
        required: true
        schema:
          type: string
      - name: data[attributes][fields][hint]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][fields][decimals]
        in: query
        description: A non-negative required value if field type is Number or PercentValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][fields][default_value]
        in: query
        description: Required if field type is SelectValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][fields][tag_type]
        in: query
        description: 'Validations:Must be one of:AccountsUsers,Checklists,ChecklistTemplates,Contacts,Configurations,Documents,Domains,Passwords,Locations,Organizations,SslCertificates,Tickets,FlexibleAssetType:
          id.'
        required: false
        schema:
          type: string
      - name: data[attributes][fields][required]
        in: query
        description: Indicates if the field is required for the flexible asset; it
          will be set to false if the field type is HeaderValidations:Must be one
          of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][fields][use_for_title]
        in: query
        description: 'Indicates if the field name should be added to the flexible
          asset name; it will be set to false if the field type is one of: Checkbox,
          Header, Number, Password, Percent, Step, Tag, Textbox, UploadValidations:Must
          be one of:true,false,1,0.'
        required: false
        schema:
          type: string
      - name: data[attributes][fields][expiration]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][fields][show_in_list]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[relationships]
        in: query
        description: Not permitted in PUT/PATCH, optional in POSTValidations:Must
          be a Hash
        required: false
        schema:
          type: object
      - name: data[relationships][flexible_asset_fields]
        in: query
        description: Validations:Must be a Hash
        required: false
        schema:
          type: object
      - name: data[relationships][flexible_asset_fields][data]
        in: query
        description: Can contain multiple Flexible Asset FieldsValidations:Must be
          an Array of nested elements
        required: false
        schema:
          type: string
      - name: data[relationships][flexible_asset_fields][data][_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cflexible_asset_fieldsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D.â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[relationships][flexible_asset_fields][data][_][type]
        in: query
        description: Validations:Must be one of:flexible_asset_fields.
        required: true
        schema:
          type: string
      - name: data[relationships][flexible_asset_fields][data][_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: false
        schema:
          type: object
      - name: data[relationships][flexible_asset_fields][data][_][attributes][order]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: data[relationships][flexible_asset_fields][data][_][attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[relationships][flexible_asset_fields][data][_][attributes][kind]
        in: query
        description: Kind cannot be changed once there are traits created for the
          fieldValidations:Must be one of:Checkbox,Date,Header,Number,Select,Text,Textbox,Upload,Tag,Percent,Password.
        required: true
        schema:
          type: string
      - name: data[relationships][flexible_asset_fields][data][_][attributes][hint]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[relationships][flexible_asset_fields][data][_][attributes][decimals]
        in: query
        description: A non-negative required value if field type is Number or PercentValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[relationships][flexible_asset_fields][data][_][attributes][default_value]
        in: query
        description: Required if field type is SelectValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[relationships][flexible_asset_fields][data][_][attributes][tag_type]
        in: query
        description: 'Validations:Must be one of:AccountsUsers,Checklists,ChecklistTemplates,Contacts,Configurations,Documents,Domains,Passwords,Locations,Organizations,SslCertificates,Tickets,FlexibleAssetType:
          id.'
        required: false
        schema:
          type: string
      - name: data[relationships][flexible_asset_fields][data][_][attributes][required]
        in: query
        description: Indicates if the field is required for the flexible asset; it
          will be set to false if the field type is HeaderValidations:Must be one
          of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[relationships][flexible_asset_fields][data][_][attributes][use_for_title]
        in: query
        description: 'Indicates if the field name should be added to the flexible
          asset name; it will be set to false if the field type is one of: Checkbox,
          Header, Number, Password, Percent, Step, Tag, Textbox, UploadValidations:Must
          be one of:true,false,1,0.'
        required: false
        schema:
          type: string
      - name: data[relationships][flexible_asset_fields][data][_][attributes][expiration]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[relationships][flexible_asset_fields][data][_][attributes][show_in_list]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '415':
          description: Unsupported Media Type
      security:
      - apiKeyAuth: []
  /flexible_asset_types/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing flexible asset type.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: include
        in: query
        description: 'Validations:Must be one of:flexible_asset_fields.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates the details of an existing flexible asset type in your
        account. Returns 422 Unprocessable Entity error if any relationships are present
        in the request.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:flexible_asset_types.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][description]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][icon]
        in: query
        description: icon image nameValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][enabled]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][fields]
        in: query
        description: List of fields for this flexible asset type; each flexible asset
          type must have at least one field and at least one field with show_in_list
          set to trueValidations:Must be an Array of nested elements
        required: true
        schema:
          type: string
      - name: data[attributes][fields][id]
        in: query
        description: Required identifier for updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][fields][flexible_asset_type_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][fields][order]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][fields][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][fields][kind]
        in: query
        description: Kind cannot be changed once there are traits created for the
          fieldValidations:Must be one of:Checkbox,Date,Header,Number,Select,Text,Textbox,Upload,Tag,Percent,Password.
        required: false
        schema:
          type: string
      - name: data[attributes][fields][hint]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][fields][decimals]
        in: query
        description: A non-negative required value if field type is Number or PercentValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][fields][default_value]
        in: query
        description: Required if field type is SelectValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][fields][tag_type]
        in: query
        description: 'Validations:Must be one of:AccountsUsers,Checklists,ChecklistTemplates,Contacts,Configurations,Documents,Domains,Passwords,Locations,Organizations,SslCertificates,Tickets,FlexibleAssetType:
          id.'
        required: false
        schema:
          type: string
      - name: data[attributes][fields][required]
        in: query
        description: Indicates if the field is required for the flexible asset; it
          will be set to false if the field type is HeaderValidations:Must be one
          of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][fields][use_for_title]
        in: query
        description: 'Indicates if the field name should be added to the flexible
          asset name; it will be set to false if the field type is one of: Checkbox,
          Header, Number, Password, Percent, Step, Tag, Textbox, UploadValidations:Must
          be one of:true,false,1,0.'
        required: false
        schema:
          type: string
      - name: data[attributes][fields][expiration]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][fields][show_in_list]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /flexible_assets:
    get:
      summary: ''
      description: 'Returns a list of flexible assets based on the unique ID of the
        flexible asset type.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Description: All filter params have to be exact match only'
        required: true
        schema:
          type: object
      - name: filter[flexible-asset-type-id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization-id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      - name: include
        in: query
        description: 'Validations:Must be one of:adapters_resources,distinct_remote_assets,attachments,passwords,user_resource_accesses,group_resource_accesses.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a new flexible asset.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:flexible_assets.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][organization_id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][flexible_asset_type_id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][traits]
        in: query
        description: A hash of key value pairs for the traits of this asset. Values
          can be arrays. The key has to be an available field key from the specified
          flexible asset type.Validations:Must be a Hash
        required: true
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates a list of flexible assets, also known as bulk updating.
        Bulk updates using         a nested relationships route are not supported.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cflexible_assetsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:flexible_assets.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[_][attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[_][attributes][traits]
        in: query
        description: A hash of key value pairs for the traits of this asset. Values
          can be arrays. The key has to be an available field key from the specified
          flexible asset type.Validations:Must be a Hash
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Deletes one or more specified flexible assets. Returns the deleted
        flexible assets and a 200 status code if successful.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Cannot be used in combination with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cflexible_assetsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:flexible_assets.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: exact match onlyValidations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: filter[flexible_asset_type_id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
      security:
      - apiKeyAuth: []
  /flexible_assets/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing flexible asset.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: include
        in: query
        description: 'Validations:Must be one of:adapters_resources,distinct_remote_assets,attachments,passwords,user_resource_accesses,group_resource_accesses,recent_versions,related_items,authorized_users.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates a flexible asset in your account.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:flexible_assets.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][traits]
        in: query
        description: A hash of key value pairs for the traits of this asset. Values
          can be arrays. The key has to be an available field key from the specified
          flexible asset type.Validations:Must be a Hash
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Destroys a single flexible asset with its ID. Returns a 204 status
        code if successful.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
  /groups:
    get:
      summary: ''
      description: 'Returns a list of groups in your account.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[name]
        in: query
        description: exact match onlyValidations:Must be a String
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      - name: include
        in: query
        description: 'Validations:Must be one of:users.Metadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
  /groups/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing group.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: include
        in: query
        description: 'Validations:Must be one of:users.Metadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
  /locations:
    get:
      summary: ''
      description: 'Returns a list of locations for all organizations or for a specified
        organization.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,id,primary,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: organization_id
        in: query
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid organization ID in your account.'
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[city]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[region_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[country_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      - name: include
        in: query
        description: 'Validations:Must be one of:adapters_resources,attachments,passwords,user_resource_accesses,group_resource_accesses.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: "Creates a new location under the specified organization. The :organization_id\
        \ is specified         in the URL or in the request body for â\x80\x98/locations`\
        \ route. Returns a 201 status on success; the created object is returned the\
        \ response body."
      parameters:
      - name: organization_id
        in: query
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid organization ID in your account.'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:locations.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[attributes][primary]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][address_1]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][address_2]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][city]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][postal_code]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][region_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][country_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][phone]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][fax]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates a list of locations, also known as bulk updating. Bulk
        updates using a nested relationships         route are not supported. Returns
        422 Bad Request error if trying to update an externally synced record.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Clocationsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:locations.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][primary]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[_][attributes][address_1]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][address_2]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][city]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][postal_code]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][region_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][country_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][phone]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][fax]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[city]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[region_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[country_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Deletes one or more specified locations. Returns the deleted locations
        and a 200 status code if successful.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Cannot be used in combination with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Clocationsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:locations.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[city]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[region_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[country_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /locations/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing location.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: organization_id
        in: query
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid organization ID in your account.'
        required: true
        schema:
          type: integer
      - name: include
        in: query
        description: 'Validations:Must be one of:adapters_resources,attachments,passwords,user_resource_accesses,group_resource_accesses,recent_versions,related_items,authorized_users.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates the details of an existing location. Returns 422 Bad Request
        error if trying to update an         externally synced record.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: organization_id
        in: query
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid organization ID in your account.'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:locations.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][primary]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][address_1]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][address_2]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][city]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][postal_code]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][region_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][country_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][phone]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][fax]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /logs:
    get:
      summary: ''
      description: 'Get all activity logs of the account for most recent 30 days.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: 'Validations:Must be a number.Metadata:Notes: Must be a value
          between 1 and 5 (inclusive).'
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:created_at.Metadata:Param Type: CGI\n\
          Notes: |\n  To Invert order use -, eg: -name\n  Comma separated values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[created_at]
        in: query
        description: "The specified string must be a date range and comma-separated\
          \ as â\x80\x98start_date, end_date`. The dates are UTC. Use `*` for unspecified\
          \ `start_date` or `end_date`. Date ranges longer than a week may be disallowed\
          \ for performance reasons.Validations:Must be a String"
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
  /manufacturers:
    get:
      summary: ''
      description: 'Returns a list of the manufacturer names in your account.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[name]
        in: query
        description: exact match onlyValidations:Must be a String
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a new manufacturer name. Returns the created object if
        successful.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:manufacturers.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /manufacturers/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing manufacturer name.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates an existing manufacturer name.        Returns 422 Bad Request
        error if trying to update an externally synced record.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:manufacturers.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /manufacturers/{manufacturer_id}/relationships/models:
    get:
      summary: ''
      description: 'Returns a list of model names for all manufacturers or for a specified
        manufacturer.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: manufacturer_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Manufacturer Id in your Account'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:id,name,manufacturer_id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a model name under the manufacturer specified in the ID
        parameter. Returns the created object if successful. Use the nested relationships
        route to add multiple models to a manufacturer in bulk.
      parameters:
      - name: manufacturer_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Manufacturer Id in your Account'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:models.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][manufacturer_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /manufacturers/{manufacturer_id}/relationships/models/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing model name.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: manufacturer_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Manufacturer Id in your Account'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates an existing model name. Returns 422 Bad Request error if
        trying to update an externally synced record.
      parameters:
      - name: manufacturer_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Manufacturer Id in your Account'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:models.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][manufacturer_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /models:
    get:
      summary: ''
      description: 'Returns a list of model names for all manufacturers or for a specified
        manufacturer.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:id,name,manufacturer_id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: manufacturer_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Manufacturer Id in your Account'
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a model name under the manufacturer specified in the ID
        parameter. Returns the created object if successful. Use the nested relationships
        route to add multiple models to a manufacturer in bulk.
      parameters:
      - name: manufacturer_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Manufacturer Id in your Account'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:models.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][manufacturer_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates a list of model names, also known as bulk updating. Bulk
        updates using a nested relationships         route are not supported. Returns
        422 Bad Request error if trying to update an externally synced record.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cmodelsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:models.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][manufacturer_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /models/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing model name.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: manufacturer_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Manufacturer Id in your Account'
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates an existing model name. Returns 422 Bad Request error if
        trying to update an externally synced record.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: manufacturer_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Manufacturer Id in your Account'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:models.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][manufacturer_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /operating_systems:
    get:
      summary: ''
      description: 'Returns a list of supported operating systems.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[name]
        in: query
        description: exact match onlyValidations:Must be a String
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
  /operating_systems/{id}:
    get:
      summary: ''
      description: 'Returns the details of one of the supported operating systems.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
  /organization_statuses:
    get:
      summary: ''
      description: 'Returns a list of the organization statuses in your account.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[name]
        in: query
        description: exact match onlyValidations:Must be a String
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a new organization status in your account. Returns the
        created object if successful.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:organization_statuses.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /organization_statuses/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing organization status.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates an organization status in your account. Returns 422 Bad
        Request error if trying to update an         externally synced record.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:organization_statuses.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /organization_types:
    get:
      summary: ''
      description: 'Returns a list of organization types in your account.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[name]
        in: query
        description: exact match onlyValidations:Must be a String
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a new organization type in your account. Returns the created
        object if successful.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:organization_types.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /organization_types/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing organization type.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates an organization type in your account. Returns 422 Bad Request
        error if trying to update an         externally synced record.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:organization_types.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /organizations:
    get:
      summary: ''
      description: 'Returns a list of organizations in your account.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,id,updated_at,organization_status_name,organization_type_name,created_at,short_name,my_glue_account_id.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[status]
        in: query
        description: Filter results by status
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[organization_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[organization_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[created_at]
        in: query
        description: "The specified string must be a date range and comma-separated\
          \ as â\x80\x98start_date, end_date`. The dates are UTC. Use `*` for unspecified\
          \ `start_date` or `end_date`. Date ranges longer than a week may be disallowed\
          \ for performance reasons.Validations:Must be a String"
        required: false
        schema:
          type: string
      - name: filter[updated_at]
        in: query
        description: "The specified string must be a date range and comma-separated\
          \ as â\x80\x98start_date, end_date`. The dates are UTC. Use `*` for unspecified\
          \ `start_date` or `end_date`. Date ranges longer than a week may be disallowed\
          \ for performance reasons.Validations:Must be a String"
        required: false
        schema:
          type: string
      - name: filter[my_glue_account_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      - name: filter[group_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[primary]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[exclude]
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[exclude][id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[exclude][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[exclude][organization_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[exclude][organization_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[range]
        in: query
        description: "To filter on a specific range, supply two comma-separated values\
          \ (e.g. â\x80\x9C2, 10â\x80\x9D is filtering for all that are greater than\
          \ or equal to 2 and less than or equal to 10). Or, an asterisk ( * ) can\
          \ filter on values either greater than or equal to (e.g. â\x80\x9C2, *â\x80\
          \x9D), or less than or equal to (â\x80\x9C*, 10â\x80\x9D)Validations:Must\
          \ be a HashMetadata:Param Type: CGI"
        required: false
        schema:
          type: object
      - name: filter[range][my_glue_account_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      - name: include
        in: query
        description: 'Validations:Must be one of:adapters_resources,attachments,rmm_companies.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates an organization. Returns the created object if successful.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:organizations.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[attributes][alert]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][description]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][organization_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][quick_notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][short_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][parent_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: 'Updates a list of organizations, also known as bulk updating.
        Bulk updates using a nested relationships         route are not supported.
        Returns 422 Bad Request error if trying to update an externally synced record
        on         attributes other than: alert, description, quick_notes'
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Must be a hash if used with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Corganizationsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:organizations.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][alert]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][description]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][organization_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][organization_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][quick_notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][short_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][parent_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[organization_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[created_at]
        in: query
        description: "The specified string must be a date range and comma-separated\
          \ as â\x80\x98start_date, end_date`. The dates are UTC. Use `*` for unspecified\
          \ `start_date` or `end_date`. Date ranges longer than a week may be disallowed\
          \ for performance reasons.Validations:Must be a String"
        required: false
        schema:
          type: string
      - name: filter[updated_at]
        in: query
        description: "The specified string must be a date range and comma-separated\
          \ as â\x80\x98start_date, end_date`. The dates are UTC. Use `*` for unspecified\
          \ `start_date` or `end_date`. Date ranges longer than a week may be disallowed\
          \ for performance reasons.Validations:Must be a String"
        required: false
        schema:
          type: string
      - name: filter[my_glue_account_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      - name: filter[group_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[primary]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[exclude]
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[exclude][id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[exclude][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[exclude][organization_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[exclude][organization_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Marks organizations identified by the specified organization IDs
        for deletion. Because it can be a long procedure to delete organizations,
        removal from the system may not happen immediately.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Cannot be used in combination with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Corganizationsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:organizations.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[organization_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[created_at]
        in: query
        description: "The specified string must be a date range and comma-separated\
          \ as â\x80\x98start_date, end_date`. The dates are UTC. Use `*` for unspecified\
          \ `start_date` or `end_date`. Date ranges longer than a week may be disallowed\
          \ for performance reasons.Validations:Must be a String"
        required: false
        schema:
          type: string
      - name: filter[updated_at]
        in: query
        description: "The specified string must be a date range and comma-separated\
          \ as â\x80\x98start_date, end_date`. The dates are UTC. Use `*` for unspecified\
          \ `start_date` or `end_date`. Date ranges longer than a week may be disallowed\
          \ for performance reasons.Validations:Must be a String"
        required: false
        schema:
          type: string
      - name: filter[my_glue_account_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      - name: filter[group_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[primary]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[exclude]
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[exclude][id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[exclude][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[exclude][organization_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[exclude][organization_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /organizations/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing organization.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: include
        in: query
        description: 'Validations:Must be one of:adapters_resources,attachments,rmm_companies.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: 'Updates the details of an existing organization. Returns 422 Bad
        Request         error if trying to update an externally synced record on attributes          other
        than: alert, description, quick_notes'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:organizations.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][alert]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][description]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][organization_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][quick_notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][short_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][parent_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /organizations/{organization_id}/copilot_smart_assist/documents:
    patch:
      summary: ''
      description: Updates a list of items, also known as bulk updating. The bulk
        update PATCH format is one that is similar to the response returned from a
        GET on a list resource. It will accept a partial representation of objects,
        as long as the required parameters are present.
      parameters:
      - name: organization_id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[type]
        in: query
        description: Validations:Must be one of:stale,not_viewed,expired.
        required: false
        schema:
          type: string
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Cannot be used in combination with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cdocumentsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:documents.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][archived]
        in: query
        description: Validations:Must be one of:true,false.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Deletes one or more specified documents. Returns the deleted documents
        and a 200 status code if successful.
      parameters:
      - name: organization_id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[type]
        in: query
        description: Validations:Must be one of:stale,not_viewed,expired.
        required: false
        schema:
          type: string
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Cannot be used in combination with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cdocumentsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:documents.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][archived]
        in: query
        description: Validations:Must be one of:true,false.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
      security:
      - apiKeyAuth: []
  /organizations/{organization_id}/relationships/configurations:
    get:
      summary: ''
      description: 'Returns a list of configurations for all organizations or for
        a specified organization.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[configuration_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[configuration_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[contact_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[serial_number]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[mac_address]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[asset_tag]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      - name: filter[rmm_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for rmm_integration_type'
        required: false
        schema:
          type: string
      - name: filter[rmm_integration_type]
        in: query
        description: Validations:Must be one of:addigy,aem,atera,auvik,managed-workplace,continuum,jamf-pro,kaseya-vsa,automate,log-me-in,msp-rmm,meraki,msp-n-central,ninja-rmm,panorama9,pulseway-rmm,syncro,watchman-monitoring,office365,vsa-x.
        required: false
        schema:
          type: string
      - name: filter[archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      - name: include
        in: query
        description: 'Validations:Must be one of:adapters_resources,configuration_interfaces,rmm_records,passwords,attachments,tickets,dnet_fa_remote_assets,user_resource_accesses,group_resource_accesses.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a configuration under the organization specified in the
        ID parameter. Returns the created object         if successful. Use the nested
        relationships route to add multiple configurations to an organization in bulk.
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:configurations.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][configuration_type_id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][configuration_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][location_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][contact_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][manufacturer_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][model_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][operating_system_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][operating_system_notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][hostname]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][primary_ip]
        in: query
        description: IP4 and IP6 are supportedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][mac_address]
        in: query
        description: 17 Character limitValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][default_gateway]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][serial_number]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][asset_tag]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][position]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][installed_by]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][purchased_by]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][purchased_at]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][warranty_expires_at]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][mitp_device_expiration_date]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][mitp_end_of_life_date]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][installed_at]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[relationships]
        in: query
        description: Not permitted in PUT/PATCH, optional in POSTValidations:Must
          be a Hash
        required: false
        schema:
          type: object
      - name: data[relationships][configuration_interfaces]
        in: query
        description: Validations:Must be a Hash
        required: false
        schema:
          type: object
      - name: data[relationships][configuration_interfaces][data]
        in: query
        description: Can contain multiple InterfacesValidations:Must be an Array of
          nested elements
        required: false
        schema:
          type: string
      - name: data[relationships][configuration_interfaces][data][_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cconfiguration_interfacesâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D.â\x80\
          ¦}Validations:Must be a Hash"
        required: false
        schema:
          type: object
      - name: data[relationships][configuration_interfaces][data][_][type]
        in: query
        description: Validations:Must be one of:configuration_interfaces.
        required: true
        schema:
          type: string
      - name: data[relationships][configuration_interfaces][data][_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: false
        schema:
          type: object
      - name: data[relationships][configuration_interfaces][data][_][attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[relationships][configuration_interfaces][data][_][attributes][ip_address]
        in: query
        description: IP4 and IP6 are supportedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[relationships][configuration_interfaces][data][_][attributes][mac_address]
        in: query
        description: Must be a valid MAC addressValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[relationships][configuration_interfaces][data][_][attributes][primary]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[relationships][configuration_interfaces][data][_][attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Deletes one or more specified configurations. Returns the deleted
        configurations and a 200 status code if successful.
      parameters:
      - name: organization_id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Cannot be used in combination with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cconfigurationsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:configurations.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[configuration_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[configuration_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[contact_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[serial_number]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[mac_address]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[asset_tag]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      - name: filter[rmm_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for rmm_integration_type'
        required: false
        schema:
          type: string
      - name: filter[rmm_integration_type]
        in: query
        description: Validations:Must be one of:addigy,aem,atera,auvik,managed-workplace,continuum,jamf-pro,kaseya-vsa,automate,log-me-in,msp-rmm,meraki,msp-n-central,ninja-rmm,panorama9,pulseway-rmm,syncro,watchman-monitoring,office365,vsa-x.
        required: false
        schema:
          type: string
      - name: filter[archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /organizations/{organization_id}/relationships/configurations/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing configuration.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: include
        in: query
        description: 'Validations:Must be one of:adapters_resources,configuration_interfaces,rmm_records,rmm_adapters_resources,passwords,attachments,tickets,adapters_resources_errors,rmm_adapters_resources_errors,active_network_glue_network_devices,to_configuration_connections,from_configuration_connections,dnet_fa_remote_assets,user_resource_accesses,group_resource_accesses,recent_versions,related_items,authorized_users.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: 'Updates the details of an existing configuration.         Returns
        422 Unprocessable Entity error if any relationships are present in the request.         Returns
        422 Unprocessable Entity error if trying to update an externally synced record
        on         attributes other than: archived, asset_tag, notes, purchased_at,
        restricted, serial_number, warranty_expires_at, mitp_device_expiration_date,
        mitp_end_of_life_date'
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:configurations.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][configuration_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][configuration_status_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][location_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][contact_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][manufacturer_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][model_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][operating_system_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][operating_system_notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][hostname]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][primary_ip]
        in: query
        description: IP4 and IP6 are supportedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][mac_address]
        in: query
        description: 17 Character limitValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][default_gateway]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][serial_number]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][asset_tag]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][position]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][installed_by]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][purchased_by]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][purchased_at]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][warranty_expires_at]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][mitp_device_expiration_date]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][mitp_end_of_life_date]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][installed_at]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /organizations/{organization_id}/relationships/contacts:
    get:
      summary: ''
      description: 'Returns a list of contacts for all organizations or for a specified
        organization.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:first_name,last_name,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[first_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[last_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[title]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[contact_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[important]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: filter[primary_email]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      - name: include
        in: query
        description: 'Validations:Must be one of:adapters_resources,location,passwords,attachments,tickets,distinct_remote_contacts,resource_fields,user_resource_accesses,group_resource_accesses.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a contact under the organization specified in the organization_id
        parameter.        Returns the created object if successful. Use the nested
        relationships route to add         multiple contacts to an organization in
        bulk.
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:contacts.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][contact_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][location_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][first_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][last_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][title]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][important]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[contact_emails]
        in: query
        description: Can contain multiple emailsValidations:Must be an Array of nested
          elements
        required: false
        schema:
          type: string
      - name: data[contact_emails][_]
        in: query
        description: "Nameless hash, should look like: {â\x80\x9Cvalueâ\x80\x9D: â\x80\
          \x9Cemail@company.comâ\x80\x9D, â\x80\x9Cprimaryâ\x80\x9D: true, â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[contact_emails][_][value]
        in: query
        description: Must be a valid email address formatValidations:Must be a String
        required: true
        schema:
          type: string
      - name: data[contact_emails][_][label_name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[contact_emails][_][primary]
        in: query
        description: Defaults to false if not provided.Validations:Must be one of:true,false.
        required: false
        schema:
          type: string
      - name: data[contact_phones]
        in: query
        description: Can contain multiple phonesValidations:Must be an Array of nested
          elements
        required: false
        schema:
          type: string
      - name: data[contact_phones][_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Cvalueâ\x80\x9D: â\x80\
          \x9C2341112233â\x80\x9D, â\x80\x9Cprimaryâ\x80\x9D: true, â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[contact_phones][_][value]
        in: query
        description: Phone numbers are stripped of all separators.Validations:Must
          be a String
        required: true
        schema:
          type: string
      - name: data[contact_phones][_][label_name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[contact_phones][_][extension]
        in: query
        description: Phone extensions are stripped of all separators.Validations:Must
          be a String
        required: false
        schema:
          type: string
      - name: data[contact_phones][_][primary]
        in: query
        description: Defaults to false if not provided.Validations:Must be one of:true,false.
        required: false
        schema:
          type: string
      - name: data[contact_phones][_][label_type]
        in: query
        description: Defaults to phone if not provided.Validations:Must be one of:phone,fax.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Deletes one or more specified contacts. Returns the deleted contacts
        and a 200 status code if successful.
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Cannot be used in combination with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Ccontactsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:contacts.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[first_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[last_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[title]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[contact_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[important]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: filter[primary_email]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /organizations/{organization_id}/relationships/contacts/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing contact.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: include
        in: query
        description: 'Validations:Must be one of:adapters_resources,location,passwords,attachments,tickets,distinct_remote_contacts,resource_fields,user_resource_accesses,group_resource_accesses,recent_versions,related_items,authorized_users.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates the details of an existing contact. Returns 422 Bad Request
        error if trying to update an         externally synced record.
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:contacts.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][contact_type_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][location_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][first_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][last_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][title]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][important]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[contact_emails]
        in: query
        description: Can contain multiple emailsValidations:Must be an Array of nested
          elements
        required: false
        schema:
          type: string
      - name: data[contact_emails][_]
        in: query
        description: "Nameless hash, should look like: {â\x80\x9Cvalueâ\x80\x9D: â\x80\
          \x9Cemail@company.comâ\x80\x9D, â\x80\x9Cprimaryâ\x80\x9D: true, â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[contact_emails][_][value]
        in: query
        description: Must be a valid email address formatValidations:Must be a String
        required: true
        schema:
          type: string
      - name: data[contact_emails][_][label_name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[contact_emails][_][primary]
        in: query
        description: Defaults to false if not provided.Validations:Must be one of:true,false.
        required: false
        schema:
          type: string
      - name: data[contact_phones]
        in: query
        description: Can contain multiple phonesValidations:Must be an Array of nested
          elements
        required: false
        schema:
          type: string
      - name: data[contact_phones][_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Cvalueâ\x80\x9D: â\x80\
          \x9C2341112233â\x80\x9D, â\x80\x9Cprimaryâ\x80\x9D: true, â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[contact_phones][_][value]
        in: query
        description: Phone numbers are stripped of all separators.Validations:Must
          be a String
        required: true
        schema:
          type: string
      - name: data[contact_phones][_][label_name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[contact_phones][_][extension]
        in: query
        description: Phone extensions are stripped of all separators.Validations:Must
          be a String
        required: false
        schema:
          type: string
      - name: data[contact_phones][_][primary]
        in: query
        description: Defaults to false if not provided.Validations:Must be one of:true,false.
        required: false
        schema:
          type: string
      - name: data[contact_phones][_][label_type]
        in: query
        description: Defaults to phone if not provided.Validations:Must be one of:phone,fax.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /organizations/{organization_id}/relationships/documents/{id}:
    patch:
      summary: ''
      description: Updates an existing document. Returns the updated object if successful.
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata::Param Type: In URL

          :Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:documents.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][public]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][is_uploaded]
        in: query
        description: Not permitted in PUT/PATCH, optional in POSTValidations:Must
          be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][document_folder_id]
        in: query
        description: Not permitted in PUT/PATCH, optional in POSTValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][sop_generator]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
      security:
      - apiKeyAuth: []
  /organizations/{organization_id}/relationships/domains:
    get:
      summary: ''
      description: 'Returns a list of domains for all organizations or for a specified
        organization.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid organization ID in your account.'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      - name: include
        in: query
        description: 'Validations:Must be one of:passwords,attachments,user_resource_accesses,group_resource_accesses.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
  /organizations/{organization_id}/relationships/expirations:
    get:
      summary: ''
      description: 'Returns a list of expirations for all organizations or for a specified
        organization.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid organization ID in your account.'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:id,organization_id,expiration_date,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[resource_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[resource_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[resource_type_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[description]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[expiration_date]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[range]
        in: query
        description: "To filter on a specific range, supply two comma-separated values\
          \ (e.g. â\x80\x9C2, 10â\x80\x9D is filtering for all that are greater than\
          \ or equal to 2 and less than or equal to 10). Or, an asterisk ( * ) can\
          \ filter on values either greater than or equal to (e.g. â\x80\x9C2, *â\x80\
          \x9D), or less than or equal to (â\x80\x9C*, 10â\x80\x9D)Validations:Must\
          \ be a HashMetadata:Param Type: CGI"
        required: false
        schema:
          type: object
      - name: filter[range][expiration_date]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
  /organizations/{organization_id}/relationships/expirations/{id}:
    get:
      summary: ''
      description: 'Returns a single expiration with the given ID or a single expiration
        for a specified organization.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid organization ID in your account.'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
  /organizations/{organization_id}/relationships/flexible_assets:
    post:
      summary: ''
      description: Creates a new flexible asset.
      parameters:
      - name: organization_id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:flexible_assets.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][organization_id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][flexible_asset_type_id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][traits]
        in: query
        description: A hash of key value pairs for the traits of this asset. Values
          can be arrays. The key has to be an available field key from the specified
          flexible asset type.Validations:Must be a Hash
        required: true
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /organizations/{organization_id}/relationships/locations:
    get:
      summary: ''
      description: 'Returns a list of locations for all organizations or for a specified
        organization.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid organization ID in your account.'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,id,primary,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[city]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[region_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[country_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      - name: include
        in: query
        description: 'Validations:Must be one of:adapters_resources,attachments,passwords,user_resource_accesses,group_resource_accesses.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: "Creates a new location under the specified organization. The :organization_id\
        \ is specified         in the URL or in the request body for â\x80\x98/locations`\
        \ route. Returns a 201 status on success; the created object is returned the\
        \ response body."
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid organization ID in your account.'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:locations.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[attributes][primary]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][address_1]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][address_2]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][city]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][postal_code]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][region_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][country_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][phone]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][fax]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /organizations/{organization_id}/relationships/locations/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing location.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid organization ID in your account.'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: include
        in: query
        description: 'Validations:Must be one of:adapters_resources,attachments,passwords,user_resource_accesses,group_resource_accesses,recent_versions,related_items,authorized_users.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates the details of an existing location. Returns 422 Bad Request
        error if trying to update an         externally synced record.
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid organization ID in your account.'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:locations.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][primary]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][address_1]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][address_2]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][city]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][postal_code]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][region_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][country_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][phone]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][fax]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Deletes one or more specified locations. Returns the deleted locations
        and a 200 status code if successful.
      parameters:
      - name: organization_id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Cannot be used in combination with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Clocationsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:locations.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[city]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[region_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[country_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[psa_id]
        in: query
        description: 'Validations:Must be a StringMetadata:Notes: This must be accompanied
          by the filter for psa_integration_type'
        required: false
        schema:
          type: string
      - name: filter[psa_integration_type]
        in: query
        description: Validations:Must be one of:manage,autotask,tigerpaw,kaseya-bms,pulseway-psa,vorex.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /organizations/{organization_id}/relationships/passwords:
    get:
      summary: ''
      description: 'Returns a list of passwords for all organizations or for a specified
        organization.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,username,url,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[password_category_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[url]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[cached_resource_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      - name: include
        in: query
        description: 'Validations:Must be one of:network_glue_networks,attachments,rotatable_password,updater,shared_links,user_resource_accesses,group_resource_accesses.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a password under the organization specified in the ID parameter.
        Returns the created object if successful. Use the nested relationships route
        to add multiple passwords to an organization in bulk.
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: show_password
        in: query
        description: "defaults to â\x80\x98falseâ\x80\x99, Can be set to â\x80\x98\
          trueâ\x80\x99 to return the passwordValidations:Must be one of:true,false.Metadata:Param\
          \ Type: In URL"
        required: false
        schema:
          type: string
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:passwords.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][password_category_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[attributes][username]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][password]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[attributes][otp_secret]
        in: query
        description: One Time Password secretValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][resource_id]
        in: query
        description: "Must be used together with â\x80\x98resource_type`Validations:Must\
          \ be a number."
        required: false
        schema:
          type: integer
      - name: data[attributes][resource_type]
        in: query
        description: "Must be used together with â\x80\x98resource_id`Validations:Must\
          \ be one of:Configuration,Contact,Document,Domain,Location,SSL Certificate,Flexible\
          \ Asset,Ticket."
        required: false
        schema:
          type: string
      - name: data[attributes][url]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][password_updated_at]
        in: query
        description: Date the password last changedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][autofill_selectors]
        in: query
        description: Used for identification of fields for password autofillValidations:Must
          be a String
        required: false
        schema:
          type: string
      - name: data[attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][is_live]
        in: query
        description: Used for understanding - is this a live version of the password
          or not.Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][generated_password_type]
        in: query
        description: This value indicates if the user is using the complex password
          feature, and if the password is complex or pronounceable.Validations:Must
          be a String
        required: false
        schema:
          type: string
      - name: data[attributes][shareable]
        in: query
        description: Indicates if password is can be shared with Secure Password Sharing
          feature.Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[relationships]
        in: query
        description: Not permitted in PUT/PATCH, optional in POSTValidations:Must
          be a Hash
        required: false
        schema:
          type: object
      - name: data[relationships][password_category]
        in: query
        description: Can belong to one password categoryValidations:Must be a Hash
        required: false
        schema:
          type: object
      - name: data[relationships][password_category][data]
        in: query
        description: Validations:Must be a Hash
        required: false
        schema:
          type: object
      - name: data[relationships][password_category][data][type]
        in: query
        description: Validations:Must be one of:password-categories.
        required: true
        schema:
          type: string
      - name: data[relationships][password_category][data][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[relationships][password_category][data][attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[relationships][password_category][data][attributes][account_id]
        in: query
        description: Identifies the account that this category belongs to.Validations:Must
          be a number.
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /organizations/{organization_id}/relationships/passwords/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing password.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: include
        in: query
        description: 'Validations:Must be one of:network_glue_networks,attachments,rotatable_password,updater,shared_links,user_resource_accesses,group_resource_accesses,recent_versions,related_items,authorized_users.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      - name: show_password
        in: query
        description: "defaults to â\x80\x98trueâ\x80\x99, Can be set to â\x80\x98\
          falseâ\x80\x99 to not return the passwordValidations:Must be one of:true,false.Metadata:Param\
          \ Type: In URL"
        required: false
        schema:
          type: string
      - name: version_id
        in: query
        description: "Set the passwordâ\x80\x99s version ID to return itâ\x80\x99\
          s revisionValidations:Must be a number.Metadata:Param Type: In URL"
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates the details of an existing password.
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: show_password
        in: query
        description: "defaults to â\x80\x98falseâ\x80\x99, Can be set to â\x80\x98\
          trueâ\x80\x99 to return the passwordValidations:Must be one of:true,false.Metadata:Param\
          \ Type: In URL"
        required: false
        schema:
          type: string
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:passwords.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][password_category_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][username]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][password]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][otp_secret]
        in: query
        description: One Time Password secretValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][url]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][password_updated_at]
        in: query
        description: Date the password last changedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][autofill_selectors]
        in: query
        description: Used for identification of fields for password autofillValidations:Must
          be a String
        required: false
        schema:
          type: string
      - name: data[attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][is_live]
        in: query
        description: Used for understanding - is this a live version of the password
          or not.Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][generated_password_type]
        in: query
        description: This value indicates if the user is using the complex password
          feature, and if the password is complex or pronounceable.Validations:Must
          be a String
        required: false
        schema:
          type: string
      - name: data[attributes][shareable]
        in: query
        description: Indicates if password is can be shared with Secure Password Sharing
          feature.Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Deletes one or more specified passwords. Returns the deleted passwords
        and a 200 status code if successful.
      parameters:
      - name: organization_id
        in: path
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Cannot be used in combination with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cpasswordsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:passwords.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[password_category_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[url]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[cached_resource_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /password_categories:
    get:
      summary: ''
      description: 'Returns a list of password categories in your account.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a new password category in your account. Returns the created
        object if successful.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:password_categories.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /password_categories/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing password category.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates a password category in your account.
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:password_categories.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /passwords:
    get:
      summary: ''
      description: 'Returns a list of passwords for all organizations or for a specified
        organization.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,username,url,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: organization_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[password_category_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[url]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[cached_resource_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      - name: include
        in: query
        description: 'Validations:Must be one of:network_glue_networks,attachments,rotatable_password,updater,shared_links,user_resource_accesses,group_resource_accesses.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    post:
      summary: ''
      description: Creates a password under the organization specified in the ID parameter.
        Returns the created object if successful. Use the nested relationships route
        to add multiple passwords to an organization in bulk.
      parameters:
      - name: organization_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: show_password
        in: query
        description: "defaults to â\x80\x98falseâ\x80\x99, Can be set to â\x80\x98\
          trueâ\x80\x99 to return the passwordValidations:Must be one of:true,false.Metadata:Param\
          \ Type: In URL"
        required: false
        schema:
          type: string
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:passwords.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: true
        schema:
          type: integer
      - name: data[attributes][password_category_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[attributes][username]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][password]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[attributes][otp_secret]
        in: query
        description: One Time Password secretValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][resource_id]
        in: query
        description: "Must be used together with â\x80\x98resource_type`Validations:Must\
          \ be a number."
        required: false
        schema:
          type: integer
      - name: data[attributes][resource_type]
        in: query
        description: "Must be used together with â\x80\x98resource_id`Validations:Must\
          \ be one of:Configuration,Contact,Document,Domain,Location,SSL Certificate,Flexible\
          \ Asset,Ticket."
        required: false
        schema:
          type: string
      - name: data[attributes][url]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][password_updated_at]
        in: query
        description: Date the password last changedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][autofill_selectors]
        in: query
        description: Used for identification of fields for password autofillValidations:Must
          be a String
        required: false
        schema:
          type: string
      - name: data[attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][is_live]
        in: query
        description: Used for understanding - is this a live version of the password
          or not.Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][generated_password_type]
        in: query
        description: This value indicates if the user is using the complex password
          feature, and if the password is complex or pronounceable.Validations:Must
          be a String
        required: false
        schema:
          type: string
      - name: data[attributes][shareable]
        in: query
        description: Indicates if password is can be shared with Secure Password Sharing
          feature.Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[relationships]
        in: query
        description: Not permitted in PUT/PATCH, optional in POSTValidations:Must
          be a Hash
        required: false
        schema:
          type: object
      - name: data[relationships][password_category]
        in: query
        description: Can belong to one password categoryValidations:Must be a Hash
        required: false
        schema:
          type: object
      - name: data[relationships][password_category][data]
        in: query
        description: Validations:Must be a Hash
        required: false
        schema:
          type: object
      - name: data[relationships][password_category][data][type]
        in: query
        description: Validations:Must be one of:password-categories.
        required: true
        schema:
          type: string
      - name: data[relationships][password_category][data][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[relationships][password_category][data][attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[relationships][password_category][data][attributes][account_id]
        in: query
        description: Identifies the account that this category belongs to.Validations:Must
          be a number.
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates a list of passwords, also known as bulk updating. Bulk
        updates using a nested relationships route are not supported.
      parameters:
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cpasswordsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:passwords.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][password_category_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[_][attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][username]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][password]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][otp_secret]
        in: query
        description: One Time Password secretValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][url]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][password_updated_at]
        in: query
        description: Date the password last changedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[_][attributes][autofill_selectors]
        in: query
        description: Used for identification of fields for password autofillValidations:Must
          be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[_][attributes][is_live]
        in: query
        description: Used for understanding - is this a live version of the password
          or not.Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[_][attributes][generated_password_type]
        in: query
        description: This value indicates if the user is using the complex password
          feature, and if the password is complex or pronounceable.Validations:Must
          be a String
        required: false
        schema:
          type: string
      - name: data[_][attributes][shareable]
        in: query
        description: Indicates if password is can be shared with Secure Password Sharing
          feature.Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Deletes one or more specified passwords. Returns the deleted passwords
        and a 200 status code if successful.
      parameters:
      - name: organization_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Cannot be used in combination with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cpasswordsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:passwords.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[password_category_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[url]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[cached_resource_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /passwords/{id}:
    get:
      summary: ''
      description: 'Returns the details of an existing password.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: organization_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: include
        in: query
        description: 'Validations:Must be one of:network_glue_networks,attachments,rotatable_password,updater,shared_links,user_resource_accesses,group_resource_accesses,recent_versions,related_items,authorized_users.Metadata:Param
          Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: string
      - name: show_password
        in: query
        description: "defaults to â\x80\x98trueâ\x80\x99, Can be set to â\x80\x98\
          falseâ\x80\x99 to not return the passwordValidations:Must be one of:true,false.Metadata:Param\
          \ Type: In URL"
        required: false
        schema:
          type: string
      - name: version_id
        in: query
        description: "Set the passwordâ\x80\x99s version ID to return itâ\x80\x99\
          s revisionValidations:Must be a number.Metadata:Param Type: In URL"
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates the details of an existing password.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: organization_id
        in: query
        description: 'Only required for nested relationships routeValidations:Must
          be a number.Metadata:Param Type: In URL

          Notes: Must be a valid Organization Id in your Account'
        required: true
        schema:
          type: integer
      - name: show_password
        in: query
        description: "defaults to â\x80\x98falseâ\x80\x99, Can be set to â\x80\x98\
          trueâ\x80\x99 to return the passwordValidations:Must be one of:true,false.Metadata:Param\
          \ Type: In URL"
        required: false
        schema:
          type: string
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:passwords.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: Required identifier for bulk updatesValidations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][organization_id]
        in: query
        description: Not required when using nested relationship routesValidations:Must
          be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][password_category_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][username]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][password]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][otp_secret]
        in: query
        description: One Time Password secretValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][url]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][password_updated_at]
        in: query
        description: Date the password last changedValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][restricted]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][autofill_selectors]
        in: query
        description: Used for identification of fields for password autofillValidations:Must
          be a String
        required: false
        schema:
          type: string
      - name: data[attributes][archived]
        in: query
        description: Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][is_live]
        in: query
        description: Used for understanding - is this a live version of the password
          or not.Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      - name: data[attributes][generated_password_type]
        in: query
        description: This value indicates if the user is using the complex password
          feature, and if the password is complex or pronounceable.Validations:Must
          be a String
        required: false
        schema:
          type: string
      - name: data[attributes][shareable]
        in: query
        description: Indicates if password is can be shared with Secure Password Sharing
          feature.Validations:Must be one of:true,false,1,0.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Destroys a single password with its ID. Returns a 204 status code
        if successful.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
  /platforms:
    get:
      summary: ''
      description: 'Returns a list of supported platforms.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[name]
        in: query
        description: exact match onlyValidations:Must be a String
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
  /platforms/{id}:
    get:
      summary: ''
      description: 'Returns details of one of the supported platforms.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
  /regions:
    get:
      summary: ''
      description: 'Returns a list of supported regions.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: country_id
        in: query
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid country ID.'
        required: true
        schema:
          type: integer
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[name]
        in: query
        description: exact match onlyValidations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[iso]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[country_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
  /regions/{id}:
    get:
      summary: ''
      description: 'Returns the details of one of the supported regions.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      - name: country_id
        in: query
        description: 'Only required for nested relationships route.Validations:Must
          be a number.Metadata:Param Type: In URL

          :Notes: Must be a valid country ID.'
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
  /user_metrics:
    get:
      summary: ''
      description: 'Returns a list of the user metrics in your account.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:id,created,viewed,edited,deleted,date.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[user_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[organization_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[resource_type]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[date]
        in: query
        description: "The specified string must be a date range and comma-separated\
          \ as â\x80\x98start_date, end_date`. The dates are UTC. Use `*` for unspecified\
          \ `start_date` or `end_date`. Date ranges longer than a week may be disallowed\
          \ for performance reasons.Validations:Must be a String"
        required: false
        schema:
          type: string
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
  /users:
    get:
      summary: ''
      description: 'Returns a list of the users in your account.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: page[size]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: "Validations:Must be one of:name,email,reputation,id,created_at,updated_at.Metadata:Param\
          \ Type: CGI\nNotes: |\n  To Invert order use -, eg: -name\n  Comma separated\
          \ values"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI

          Notes: Comma separated values'
        required: false
        schema:
          type: object
      - name: filter[id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: filter[name]
        in: query
        description: exact match onlyValidations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[email]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[role_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: filter[salesforce_id]
        in: query
        description: Validations:Must be a number.
        required: false
        schema:
          type: integer
      - name: page
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: CGI'
        required: false
        schema:
          type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
      security:
      - apiKeyAuth: []
  /users/{id}:
    get:
      summary: ''
      description: 'Returns information about one user.


        Note: The maximum number of results that can be requested is 1000. If your
        requests are timing out, try lowering the page size.'
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: page[size]
        in: query
        description: Number of items per page (max 1000)
        required: false
        schema:
          type: integer
          maximum: 1000
      - name: page[number]
        in: query
        description: Page number to retrieve
        required: false
        schema:
          type: integer
          minimum: 1
      - name: sort
        in: query
        description: Field by which to sort the results. Prepend '-' for descending
          order.
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
      - apiKeyAuth: []
    patch:
      summary: ''
      description: Updates the name or profile picture (avatar) of an existing user.
      parameters:
      - name: id
        in: path
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:users.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][first_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][last_name]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][avatar]
        in: query
        description: A hash of avatar data or an empty hash to removeValidations:Must
          be a Hash
        required: false
        schema:
          type: object
      - name: data[attributes][avatar][content]
        in: query
        description: A base64-encoded imageValidations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][avatar][file_name]
        in: query
        description: The image file nameValidations:Must be a String
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /{resource_type}/{resource_id}/relationships/attachments:
    post:
      summary: ''
      description: Attaches a file to the asset specified in the ID parameter. Returns         the
        created object if successful. Can also be used to add multiple         attachments
        to an asset in bulk.
      parameters:
      - name: resource_type
        in: path
        description: 'The resource type of the parent resourceValidations:Must be
          one of:checklists,checklist_templates,configurations,contacts,documents,domains,locations,passwords,ssl_certificates,flexible_assets,tickets.Metadata:Param
          Type: In URL'
        required: true
        schema:
          type: string
      - name: resource_id
        in: path
        description: 'The resource id of the parent resource.Validations:Must be a
          number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:attachments.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][attachment]
        in: query
        description: "Can be an uploaded file if multipart is used, or a JSON with\
          \ Base64                     encoded content as following:\"attachment\"\
          : {\n  \"content\": \"<Base64 code of the uploaded file>\",\n  \"file_name\"\
          : \"test.png\"\n}Validations:Must be one of:Hash,File."
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Deletes one or more specified attachments. Returns the deleted
        attachments         and a 200 status code if successful.
      parameters:
      - name: resource_type
        in: path
        description: 'The resource type of the parent resourceValidations:Must be
          one of:checklists,checklist_templates,configurations,contacts,documents,domains,locations,passwords,ssl_certificates,flexible_assets,tickets.Metadata:Param
          Type: In URL'
        required: true
        schema:
          type: string
      - name: resource_id
        in: path
        description: 'The resource id of the parent resource.Validations:Must be a
          number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Cannot be used in combination with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Cattachmentsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:attachments.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /{resource_type}/{resource_id}/relationships/attachments/{id}:
    patch:
      summary: ''
      description: "Updates the details of an existing attachment. Only the attachment\
        \ name that         is displayed on the asset view screen can be changed.\
        \ The originalfile_namecanâ\x80\x99t be changed."
      parameters:
      - name: resource_type
        in: path
        description: 'The resource type of the parent resourceValidations:Must be
          one of:checklists,checklist_templates,configurations,contacts,documents,domains,locations,passwords,ssl_certificates,flexible_assets,tickets.Metadata:Param
          Type: In URL'
        required: true
        schema:
          type: string
      - name: resource_id
        in: path
        description: 'The resource id of the parent resource.Validations:Must be a
          number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:attachments.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data[attributes][name]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /{resource_type}/{resource_id}/relationships/related_items:
    post:
      summary: ''
      description: Creates a related item. Returns the created object if successful.         Can
        also be used to add multiple related items to an asset in bulk.
      parameters:
      - name: resource_type
        in: path
        description: 'The resource type of the parent resourceValidations:Must be
          one of:checklists,checklist_templates,configurations,contacts,documents,domains,folders,locations,passwords,ssl_certificates,flexible_assets,tickets.Metadata:Param
          Type: In URL'
        required: true
        schema:
          type: string
      - name: resource_id
        in: path
        description: 'The resource id of the parent resource.Validations:Must be a
          number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:related_items.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data[attributes][destination_type]
        in: query
        description: Validations:Must be one of:User,Checklist,Checklist Template,Contact,Configuration,Datto
          Device,Document,Document Folder,Domain,Location,Organization,Password,SSL
          Certificate,Flexible Asset,Ticket.
        required: true
        schema:
          type: string
      - name: data[attributes][destination_id]
        in: query
        description: Validations:Must be a String
        required: true
        schema:
          type: string
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      - name: data[attributes][via_copilot]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
    delete:
      summary: ''
      description: Deletes one or more specified related items. Returns the deleted
        related items         and a 200 status code if successful.
      parameters:
      - name: resource_type
        in: path
        description: 'The resource type of the parent resourceValidations:Must be
          one of:checklists,checklist_templates,configurations,contacts,documents,domains,folders,locations,passwords,ssl_certificates,flexible_assets,tickets.Metadata:Param
          Type: In URL'
        required: true
        schema:
          type: string
      - name: resource_id
        in: path
        description: 'The resource id of the parent resource.Validations:Must be a
          number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data
        in: query
        description: 'Validations:Must be an Array of nested elementsMetadata:Param
          Type: JSON Body Param

          Notes: Cannot be used in combination with filter'
        required: true
        schema:
          type: string
      - name: data[_]
        in: query
        description: "Nameless hash: should look like: {â\x80\x9Ctypeâ\x80\x9D: â\x80\
          \x9Crelated_itemsâ\x80\x9D, â\x80\x9Cattributesâ\x80\x9D:â\x80¦}Validations:Must\
          \ be a Hash"
        required: false
        schema:
          type: object
      - name: data[_][type]
        in: query
        description: Validations:Must be one of:related_items.
        required: true
        schema:
          type: string
      - name: data[_][attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[_][attributes][id]
        in: query
        description: Validations:Must be a number.
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
  /{resource_type}/{resource_id}/relationships/related_items/{id}:
    patch:
      summary: ''
      description: Updates the details of an existing related item. Only the related
        item notes         that are displayed on the asset view screen can be changed.
      parameters:
      - name: resource_type
        in: path
        description: 'The resource type of the parent resourceValidations:Must be
          one of:checklists,checklist_templates,configurations,contacts,documents,domains,folders,locations,passwords,ssl_certificates,flexible_assets,tickets.Metadata:Param
          Type: In URL'
        required: true
        schema:
          type: string
      - name: resource_id
        in: path
        description: 'The resource id of the parent resource.Validations:Must be a
          number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: data
        in: query
        description: 'Validations:Must be a HashMetadata:Param Type: JSON Body Param'
        required: true
        schema:
          type: object
      - name: data[type]
        in: query
        description: Validations:Must be one of:related_items.
        required: true
        schema:
          type: string
      - name: data[attributes]
        in: query
        description: Validations:Must be a Hash
        required: true
        schema:
          type: object
      - name: data[attributes][id]
        in: query
        description: 'Validations:Must be a number.Metadata:Param Type: In URL'
        required: true
        schema:
          type: integer
      - name: data[attributes][notes]
        in: query
        description: Validations:Must be a String
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '415':
          description: Unsupported Media Type
        '422':
          description: Unprocessable Entity
      security:
      - apiKeyAuth: []
components:
  schemas: {}
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
security:
- apiKeyAuth: []

